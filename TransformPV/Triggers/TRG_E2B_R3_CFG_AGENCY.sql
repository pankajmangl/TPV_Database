CREATE OR REPLACE TRIGGER &TRANSFORMPV_USER..TRG_E2B_R3_CFG_AGENCY
/*****************************************************************************************
Company             : Vitrana
Author              : Pavan Kumar
Version Number      : 1.0
Description         : This trigger having the code related to maintain DML operation history on corresponding table.
Last Modified Date  : 27-OCT-2015
******************************************************************************************/
BEFORE INSERT OR UPDATE
ON &TRANSFORMPV_USER..E2B_R3_CFG_AGENCY 
REFERENCING NEW AS NEW OLD AS OLD
FOR EACH ROW
DECLARE
   LN_OPERATION_TYPE       NUMBER;
   LN_AUDIT_ID             NUMBER;
   LN_PAGE_ID              NUMBER;
   LD_SYSDATE              DATE   := SYSDATE;
   LD_EFFECTIVE_END_DATE   DATE	   := TO_DATE ('12/31/9999', 'MM/DD/YYYY HH24:MI:SS');
   LV_VERSION_NUMBER       NUMBER;
   LV_NEW_VERSION_NUMBER   NUMBER;
BEGIN
   LN_AUDIT_ID:= PKG_AUDIT_LOG.F_GET_AUDIT_ID;

   BEGIN
      SELECT PAGE_ID
        INTO LN_PAGE_ID
        FROM E2B_CFG_AUDIT_TAB_RELATIONS
       WHERE TABLE_NAME = 'E2B_R3_CFG_AGENCY';
   EXCEPTION
      WHEN NO_DATA_FOUND
      THEN
         LN_PAGE_ID    := NULL;
   END;

   IF INSERTING
   THEN
      LN_OPERATION_TYPE    := 1;
   ELSIF UPDATING
   THEN
      LN_OPERATION_TYPE    := 2;
   END IF;

   IF :OLD.CURRENT_VERSION IS NULL
   THEN
      :NEW.CURRENT_VERSION    := 1;
   ELSE
      :NEW.CURRENT_VERSION    := :OLD.CURRENT_VERSION + 1;
   END IF;

   LV_NEW_VERSION_NUMBER    := :NEW.CURRENT_VERSION;
   LV_VERSION_NUMBER        :=
                    PKG_AUDIT_LOG.F_GET_VERSION_NUMBER (LV_NEW_VERSION_NUMBER);

   UPDATE E2B_R3_CFG_AGENCY_HIST
      SET EFFECTIVE_END_DATE = LD_SYSDATE,
          CURRENT_FLG = 0
    WHERE CURRENT_FLG = 1 AND AGENCY_ID = :NEW.AGENCY_ID;

   INSERT INTO E2B_R3_CFG_AGENCY_HIST
               (AGENCY_ID, AGENCY_NAME, UPGRADE_XSL,
                DOWNGRADE_XSL, ACK_UPGRADE_XSL,
                ACK_DOWNGRADE_XSL, UPGRADE_IN_FOLDER,
                UPGRADE_OUT_FOLDER, DOWNGRADE_IN_FOLDER,
                DOWNGRADE_OUT_FOLDER, CREATED_BY,
                CREATED_DATE, MODIFIED_BY, MODIFIED_DATE,
                DELETED, DELETED_DATE, FINAL_E2B_CLASS_ID,
                FINAL_HTML_CLASS_ID, E2B_PROFILE_ID,
                ACK_PROFILE_ID, XSD_FILE, ENABLED,
                ALLOW_MULTI_ACK, EXP_ATTACHMENT_PATH,
                IMP_ATTACHMENT_PATH, IMP_ATTACHMENT_CLASS_ID,
                FINAL_FILE_FORMAT, VERSION_NUMBER, AUDIT_ID,
                OPERATION_TYPE, EFFECTIVE_START_DATE, EFFECTIVE_END_DATE,
                CURRENT_FLG, INSERT_DATE
               )
        VALUES (:NEW.AGENCY_ID, :NEW.AGENCY_NAME, :NEW.UPGRADE_XSL,
                :NEW.DOWNGRADE_XSL, :NEW.ACK_UPGRADE_XSL,
                :NEW.ACK_DOWNGRADE_XSL, :NEW.UPGRADE_IN_FOLDER,
                :NEW.UPGRADE_OUT_FOLDER, :NEW.DOWNGRADE_IN_FOLDER,
                :NEW.DOWNGRADE_OUT_FOLDER, :NEW.CREATED_BY,
                :NEW.CREATED_DATE, :NEW.MODIFIED_BY, :NEW.MODIFIED_DATE,
                :NEW.DELETED, :NEW.DELETED_DATE, :NEW.FINAL_E2B_CLASS_ID,
                :NEW.FINAL_HTML_CLASS_ID, :NEW.E2B_PROFILE_ID,
                :NEW.ACK_PROFILE_ID, :NEW.XSD_FILE, :NEW.ENABLED,
                :NEW.ALLOW_MULTI_ACK, :NEW.EXP_ATTACHMENT_PATH,
                :NEW.IMP_ATTACHMENT_PATH, :NEW.IMP_ATTACHMENT_CLASS_ID,
                :NEW.FINAL_FILE_FORMAT, LV_VERSION_NUMBER, LN_AUDIT_ID,
                CASE WHEN :NEW.DELETED <> :OLD.DELETED AND LN_OPERATION_TYPE = 2 THEN
                3 
                ELSE 
                LN_OPERATION_TYPE END, LD_SYSDATE, LD_EFFECTIVE_END_DATE,
                1, LD_SYSDATE
               );
END;
/


